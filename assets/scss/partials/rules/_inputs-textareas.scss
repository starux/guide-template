// File: Forms for Compact Appliance
// Description: These colors make up 90% of the colors used on the site. See "brand Colors" for spot colors.
// Site: Compact Appliance

// ------------------------------------------------------------
// START SASS INCLUDES


// @include "variables/colors";


// END SASS INCLUDES
// ------------------------------------------------------------



/*doc
---
title: Form Elements
name: form-elements
parent: forms
---

The following is a list of the form elements we use. See the specific section for a code snippet and specific use cases.

*/



/*doc
---
title: Checkboxes
name: checkboxes
parent: form-elements
---

* Use a checkbox when the user should have the option to select more than one item.
* Checkboxes should not exceed more than 10 options. Beyond 10 options you should consider a new question whose options are a smaller subset.
* Checkboxes and the labels associated with them should both be clickable
* Each pair (checkbox and label) should be separated by at least 30px of space (vertically and horizontally) so on touchscreen devices 
the user can easily tap the options they want.

To have the `<label>` for the checkbox or radio also display a "not-allowed" cursor when the user hovers over the label, add the `disabled` class to 
your `.checkbox`, `.checkbox-inline`, or `<fieldset>`.

```html_example

<form>
    <div class="checkbox">
        <label>
            <input type="checkbox"> Check me out
        </label>
    </div>
    <div class="checkbox">
        <label>
            <input type="checkbox"> Check me out
        </label>
    </div>
    <div class="checkbox disabled">
        <label>
            <input type="checkbox" disabled> I'm disabled
        </label>
    </div>
</form>

```

For **Inline Checkboxes** Use the `checkbox-inline` class on the label.

<form>
    <div class="checkbox-inline">
        <label>
            <input type="checkbox"> Check me out
        </label>
    </div>
    <div class="checkbox-inline">
        <label>
            <input type="checkbox"> Check me out
        </label>
    </div>
    <div class="checkbox-inline disabled">
        <label>
            <input type="checkbox" disabled> I'm disabled
        </label>
    </div>
</form>


*/





/*doc
---
title: Radio Buttons
name: radios
parent: form-elements
---

* Radio buttons are mutually exclusive so they are used only when 1 option of a group can be selected from a group of options.
* Only use radios when you have less than 10 options. You should use a `<select>` when you have more than 10.

To have the `<label>` for the radio also display a "not-allowed" cursor when the user hovers over the label, add the `disabled` class to 
your `.radio`, `.radio-inline`, or `<fieldset>`.

```html_example

<form>
    <div class="radio">
        <label>
            <input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked>
            Option 1
        </label>
    </div>
    <div class="radio">
        <label>
            <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2">
            Option 2
        </label>
    </div>
    <div class="radio disabled">
        <label>
            <input type="radio" name="optionsRadios" id="optionsRadios3" value="option3" disabled>
            Option 3 is disabled
        </label>
    </div>
</form>

```

For **Inline Radios** use the `radio-inline` class on the label.

<div class="radio radio-inline">
    <label>
        <input type="radio" name="optionsRadios" id="optionsRadios1" value="option1" checked>
        Option 1
    </label>
</div>
<div class="radio radio-inline">
    <label>
        <input type="radio" name="optionsRadios" id="optionsRadios2" value="option2">
        Option 2
    </label>
</div>
<div class="radio radio-inline disabled">
    <label>
        <input type="radio" name="optionsRadios" id="optionsRadios3" value="option3" disabled>
        Option 3 is disabled
    </label>
</div>

*/





/*doc
---
title: Selects and Multiselects
name: selects
parent: form-elements
---

A `<select>` should be used when you have a lengthy list of options that the user can only select one.

Note that many native select menus—namely in Safari and Chrome—have rounded corners that cannot be modified via border-radius properties.

```html_example

<form>
    <div class="form-group">
        <label for="select1">Rating</label>
        <select id="select1" class="form-control">
           <option>1</option>
           <option>2</option>
           <option>3</option>
           <option>4</option>
           <option>5</option>
        </select>
    </div>
<form>

```

### Selecting Multiple Items

If the user should choose multiple options then please use checkboxes. _If a multiselect is desired please ask the UX & Creative team._

*/



/*doc
---
title: Textareas
name: textarea
parent: form-elements
---

*/




/*doc
---
title: Date Pickers
name: date-picker
parent: form-elements
---

*/



/*doc
---
title: File Inputs
name: file-input
parent: form-elements
---

*/




/*doc
---
title: Buttons
name: buttons-forms
parent: form-elements
---

This only applies to styling what looks to the user as a form to fill out. If a form is being used to drive a unique buying experience, such as the add to cart form on a PDP or a search bar in the site header, the look and feel can be customized to fit those special cases.

#### Back Button


#### Submit Button


#### Reset Form Button


#### Continue Button

*/